{"remainingRequest":"E:\\桌面\\项目套装\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\桌面\\项目套装\\springboot\\vue\\src\\font-views\\FontIncoming.vue?vue&type=style&index=0&id=d4982baa&scoped=true&lang=css&","dependencies":[{"path":"E:\\桌面\\项目套装\\springboot\\vue\\src\\font-views\\FontIncoming.vue","mtime":1695086681476},{"path":"E:\\桌面\\项目套装\\springboot\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1694254609363},{"path":"E:\\桌面\\项目套装\\springboot\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1694254607725},{"path":"E:\\桌面\\项目套装\\springboot\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1694254607618},{"path":"E:\\桌面\\项目套装\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1694257121196},{"path":"E:\\桌面\\项目套装\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1694254607058}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5ib2R5IHsNCiAgd2lkdGg6IDEwMDBweDsNCiAgbWFyZ2luLXJpZ2h0OiBhdXRvOw0KICBtYXJnaW4tbGVmdDogYXV0bzsNCiAgbWFyZ2luLXRvcDogMTVweDsNCn0NCg0KLmJvZHkgew0KICB3aWR0aDogMTAwMHB4Ow0KICBtYXJnaW4tcmlnaHQ6IGF1dG87DQogIG1hcmdpbi1sZWZ0OiBhdXRvOw0KICBtYXJnaW4tdG9wOiAxNXB4Ow0KfQ0KDQouYXZhdGFyLXVwbG9hZGVyIC5lbC11cGxvYWQgew0KICBib3JkZXI6IDFweCBkYXNoZWQgI2Q5ZDlkOTsNCiAgYm9yZGVyLXJhZGl1czogNnB4Ow0KICBjdXJzb3I6IHBvaW50ZXI7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCn0NCg0KLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkOmhvdmVyIHsNCiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGOw0KfQ0KDQo="},{"version":3,"sources":["FontIncoming.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"FontIncoming.vue","sourceRoot":"src/font-views","sourcesContent":["<template>\r\n\r\n  <div class=\"body\" style=\"margin-top: 3%\">\r\n    <div style=\"margin-top: 3%\">\r\n      <nav-menu></nav-menu>\r\n      <router-view/>\r\n    </div>\r\n    <div style=\"margin-left: 400px;margin-top: 20px\"><h1>入库资料登入</h1></div>\r\n    <el-container class=\"body\">\r\n      <div style=\"margin: 20px;\"></div>\r\n      <el-form :label-position=\"labelPosition\" label-width=\"80px\" ref=\"FontForm\" :model=\"FontForm\" :rules=\"rules\" >\r\n\r\n        <el-form-item label=\"货物种类\" prop=\"cargoType\">\r\n          <el-input v-model=\"FontForm.cargoType\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"总重量(单位：KG)\" prop=\"totalWeight\">\r\n          <el-input v-model=\"FontForm.totalWeight\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"入库货物总数(单位：件数)\" prop=\"totalNumber\">\r\n          <el-input v-model=\"FontForm.totalNumber\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"入库地址\" prop=\"address\">\r\n          <el-input v-model=\"FontForm.address\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"货物状态(是否有破损)\" prop=\"state\">\r\n          <el-input type=\"textarea\" v-model=\"FontForm.state\"></el-input>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n    </el-container>\r\n    <el-button type=\"primary\" style=\"margin-left: 100px\" size=\"200\" @click=\"save\">提交入库</el-button>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport NavMenu from './common/NavMenu'\r\nexport default {\r\n  name: 'FontIncoming',\r\n  components: {NavMenu},\r\n  data() {\r\n    //验证状态\r\n    let validateState = (rule, value, callback) => {\r\n      if (!value) {\r\n        console.log('State 验证失败：值不能为空');\r\n        return callback(new Error('货物状态不能为空'));\r\n      }else {\r\n        callback();// 一定要每种情况都执行回调\r\n      }\r\n    }\r\n    let validateTotalWeight = (rule, value, callback) => {\r\n      if (!value) {\r\n        console.log('totalWeight 验证失败：值不能为空');\r\n        callback(new Error('货物总重量不能为空'));\r\n      }else\r\n      if (!(/^[+]{0,1}(\\d+)$|^[+]{0,1}(\\d+\\.\\d+)$/).test(value)) {\r\n        callback(new Error('请输入数字值'))\r\n      }else {\r\n        callback();// 一定要每种情况都执行回调\r\n      }\r\n    }\r\n    let validateTotalNumber = (rule, value, callback) => {\r\n      if (!value) {\r\n        console.log('TotalNumber 验证失败：值不能为空');\r\n        callback(new Error('货物总数量不能为空'));\r\n      }else\r\n      if (!(/^[+]{0,1}(\\d+)$|^[+]{0,1}(\\d+\\.\\d+)$/).test(value)) {\r\n        console.log('totalWeight 验证失败：值必须是数字');\r\n        callback(new Error('请输入数字值'))\r\n      }else {\r\n        callback();// 一定要每种情况都执行回调\r\n      }\r\n    }\r\n    let validateCargoType = (rule, value, callback) => {\r\n      if (!value || !value.trim()) {\r\n        console.log('CargoType 验证失败：值不能为空');\r\n        return callback(new Error('货物种类不能为空'));\r\n      }else {\r\n        callback();// 一定要每种情况都执行回调\r\n      }\r\n    }\r\n    let validateAddress = (rule, value, callback) => {\r\n      if (!value || !value.trim()) {\r\n        console.log('Address 验证失败：值不能为空');\r\n        return callback(new Error('出库地址不能为空'));\r\n      }else {\r\n        callback();// 一定要每种情况都执行回调\r\n      }\r\n    }\r\n    return {\r\n      labelPosition:'top',\r\n      resultData: [],\r\n      FontForm: {\r\n        entryNumber:'',\r\n        currentState:'',\r\n        state:'',\r\n        totalWeight:'',\r\n        cargoType:'',\r\n        entryTime:'',\r\n        totalNumber:'',\r\n        address:'',\r\n      },\r\n      rules: {\r\n        state: [{ validator: validateState, trigger: 'blur' }],\r\n        totalWeight: [{ validator: validateTotalWeight, trigger: 'blur' }],\r\n        totalNumber: [{ validator: validateTotalNumber, trigger: 'blur' }],\r\n        cargoType: [{ validator: validateCargoType, trigger: 'blur' }],\r\n        address: [{ validator: validateAddress, trigger: 'blur' }],\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    save() {\r\n      this.$refs['FontForm'].validate((valid)=> {\r\n        if (valid) {\r\n          this.request.post(\"/incoming\", this.FontForm).then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success(\"保存成功\")\r\n              this.$refs.FontForm.resetFields()\r\n            } else {\r\n              this.$message.error(\"保存失败\")\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n  },\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.body {\r\n  width: 1000px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  margin-top: 15px;\r\n}\r\n\r\n.body {\r\n  width: 1000px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  margin-top: 15px;\r\n}\r\n\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n</style>\r\n"]}]}